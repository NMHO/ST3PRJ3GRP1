<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BTALogikLag</name>
    </assembly>
    <members>
        <member name="T:BTALogikLag.ControlLogikLag">
            <summary>
            Kontrolklasse for LogikLag
            </summary>
        </member>
        <member name="P:BTALogikLag.ControlLogikLag.KLL">
            <summary>
            Property for Kalibrerings-klasse
            </summary>
        </member>
        <member name="P:BTALogikLag.ControlLogikLag.NPJLL">
            <summary>
            Property for Nulpunktsjusterings-klasse
            </summary>
        </member>
        <member name="P:BTALogikLag.ControlLogikLag.GLL">
            <summary>
            Property for Gem-klasse
            </summary>
        </member>
        <member name="P:BTALogikLag.ControlLogikLag.MLL">
            <summary>
            Property for Monitorerings-klasse
            </summary>
        </member>
        <member name="M:BTALogikLag.ControlLogikLag.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor der initialiserer Logiklaget
            </summary>
            <param name="mydal">Modtager kontrolklassen for datalag som parameter</param>
        </member>
        <member name="T:BTALogikLag.FilterLL">
            <summary>
            Klasse der indeholder algoritme for filtrering af signal
            </summary>
        </member>
        <member name="M:BTALogikLag.FilterLL.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor 
            </summary>
            <param name="mydal"></param>
        </member>
        <member name="M:BTALogikLag.FilterLL.FiltrerSignal(System.Int32,System.Collections.Generic.List{System.Double})">
            <summary>
            Denne metode filtrerer den liste som kommer ind med et moving avg.-filter som udglatter signalet. 
            Inspiration fra https://dotnetwidkunal.wordpress.com/2010/06/04/creating-a-simple-moving-average-function-in-c/ d. 28/10/16
            </summary>
            <param name="frameSize">Framesize diktere opløsningen af filteret (høj frameSize = meget udglattet)</param>
            <param name="data">Listen med data fra DAQ'en</param>
            <returns></returns>
        </member>
        <member name="T:BTALogikLag.GemLL">
            <summary>
            Gem-klasse i Logiklaget
            </summary>
        </member>
        <member name="P:BTALogikLag.GemLL.GDTO">
            <summary>
            DTO for gem-funktionalitet
            </summary>
        </member>
        <member name="M:BTALogikLag.GemLL.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor
            </summary>
            <param name="mydal">modtager kontrolklassen for datalaget som parameter</param>
        </member>
        <member name="M:BTALogikLag.GemLL.validerCPR(System.String)">
            <summary>
            Validerer CPR nr
            </summary>
            <param name="CPR"></param>
            <returns></returns>
        </member>
        <member name="M:BTALogikLag.GemLL.validerPersonalenr(System.String)">
            <summary>
            Validerer personalenummer
            </summary>
            <param name="pnummer"></param>
            <returns></returns>
        </member>
        <member name="M:BTALogikLag.GemLL.gemData(DTO.GemDTO)">
            <summary>
            Kalder gem metode i GDL
            </summary>
            <param name="GDTO_"></param>
            <returns></returns>
        </member>
        <member name="T:BTALogikLag.KalibreringLL">
            <summary>
            Håndterer, beregner og opdaterer kalibreringsdata
            </summary>
        </member>
        <member name="P:BTALogikLag.KalibreringLL.KDTO">
            <summary>
            DTO for kalibrerings-funktionalitet
            </summary>
        </member>
        <member name="M:BTALogikLag.KalibreringLL.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor der modtager en reference til kalibreringsDTO'en oprettet i BTA-hovedvinduet
            </summary>
        </member>
        <member name="M:BTALogikLag.KalibreringLL.opdaterKalibreringsData(System.Double,System.Int32)">
            <summary>
            Opdaterer DTO'en med den det indtastede kalibreringstryk og den indlæste spændingsværdi fra DAQ'en
            Gemmer når programflow kalibrering 2 er udført
            </summary>
            <param name="kalTryk">Det indtastede kalibreringstryk i mmHg i kalibreringsvinduet</param>
            <param name="kalNr">Nummeret på igangværende kalibrering. 1 eller 2</param>
            <returns>
            Returnerer bool-værdi om indtastet data er godkendte
            </returns>
        </member>
        <member name="M:BTALogikLag.KalibreringLL.beregnKalibreringsHældning">
            <summary>
            Omregner den indlæste kalibreringsværdi fra spænding i volt til tryk i mmHg
            </summary>
            <remarks>
            Beregne hældningen for følsomheden y = a*x .. a = (y2 - y1) / (x2 - x1)
            </remarks>
            <returns>
            Returnerer bool-værdi om udregningen kunne lade sig gøre
            </returns>
        </member>
        <member name="M:BTALogikLag.KalibreringLL.gemKalibrering(DTO.KalibreringDTO)">
            <summary>
            Kalder metode der gemmer KDTO fra datalaget
            </summary>
            <param name="KDTO">Kalibrerings-DTO</param>
        </member>
        <member name="M:BTALogikLag.KalibreringLL.hentKalibreringFraDL">
            <summary>
            Kalder metode der henter de indlæste kalibreringsdata fra datalaget
            </summary>
            <returns>
            Returnerer en KalibreringDTO med de indlæste kalibreringsdata
            </returns>
        </member>
        <member name="T:BTALogikLag.MonitoreringLL">
            <summary>
            Henter og håndterer data fra datalaget i forbindelse med monitorering
            </summary>
        </member>
        <member name="P:BTALogikLag.MonitoreringLL.framesize">
            <summary>
            Property der bestemmer framesize (filtreringsgraden), og om filter er slået til eller fra
            </summary>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor der modtager en reference til datalaget. Sætter framesize til 0.
            </summary>
            <param name="mydal"></param>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.startMåling">
            <summary>
            Attach'er klassen til MDL og kalder asynkront kald i datalaget med 100 samples.
            </summary>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.stopMåling">
            <summary>
            Detach'er klassen fra MDL og stopper asynkront kald.
            </summary>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.hentBTSekvens(System.Double,System.Double)">
            <summary>
            Henter nuværende sekvens fra MDTO og ganger kalibreringshældningen på, og trækker nulpunktsjusteringen fra. 
            Herefter sættes den nuværende sekvens i MDTO igen, afhængigt af framesize.
            </summary>
            <param name="KHældning"></param>
            <param name="NVærdi"></param>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.indstilRefTilDTO(DTO.MonitorerDTO@)">
            <summary>
            Opretter en reference til MDTO
            </summary>
            <param name="MDTO"></param>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.midlingAfIndlæstSignal(System.Collections.Generic.List{System.Double})">
            <summary>
            Midler indlæst signal, således at der tages et gennemsnit af 5 værdier. 
            </summary>
            <param name="nSekvens"></param>
            <returns></returns>
        </member>
        <member name="M:BTALogikLag.MonitoreringLL.Update(System.Collections.Generic.List{System.Double})">
            <summary>
            Sætter den nuværende sekvens i MDTO lig med indlæst sekvens fra DAQ. Herefter kaldes Notify, som også ligger i MLL.
            </summary>
            <param name="sekvens"></param>
        </member>
        <member name="T:BTALogikLag.Subject">
            <summary>
            Abstrakt subjekt-klasse som MLL arver fra. Bruges til observer-pattern.
            </summary>
        </member>
        <member name="M:BTALogikLag.Subject.Attach(Interfaces.IObserverPL)">
            <summary>
            Attach'er alle oberservers til subjekt
            </summary>
            <param name="observer"></param>
        </member>
        <member name="M:BTALogikLag.Subject.Detach(Interfaces.IObserverPL)">
            <summary>
            Detach'er alle observers fra subjekt
            </summary>
            <param name="observer"></param>
        </member>
        <member name="M:BTALogikLag.Subject.Notify">
            <summary>
            Kalder Update i alle attach'ede observerklasser
            </summary>
        </member>
        <member name="T:BTALogikLag.NulpunktsjusteringLL">
            <summary>
            Klasse der henter den indlæste nulpunktsspændings fra datalaget
            </summary>
        </member>
        <member name="M:BTALogikLag.NulpunktsjusteringLL.#ctor(BTADataLag.ControlDataLag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:BTALogikLag.NulpunktsjusteringLL.hentNulpunktsSpænding">
            <summary>
            Henter den indlæste nulpunktsspændings fra datalaget
            </summary>
            <returns>
            Returnerer den indlæste nulpunktsspændings
            </returns>
        </member>
    </members>
</doc>
